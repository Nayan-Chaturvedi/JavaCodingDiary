package PagingAndSorting.SpringJpaExample;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.web.PageableDefault;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/book")
public class BookController 
{
	@Autowired
	private ImplementBookService service;
	
	@GetMapping
	public List<Book> getAll()
	{
		return service.getAll();
	}
	
	@GetMapping("/id/{id}")
	public Book getById(@PathVariable Long id)
	{
		return service.getById(id);
	}
	
	@PostMapping
	public String createData(@RequestBody Book book)
	{
		service.createData(book);
		return book.getId()+" and "+book.getName()+ " save successfully";
	}
	
	@Autowired
	private BookRepository res;
	
	@GetMapping("/page-wise")
	public Page<Book> getBook(@PageableDefault(page = 1, size = 3) Pageable pageble)
	{
		Page<Book> books=res.findAll(pageble);
		return books
	}
}
